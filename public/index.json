[{"authors":null,"categories":["Mathematics","R"],"content":"I was reading about the Hidden beauty of multiplication tables and I thought it could be fun to make some of the cool plots in that article with R. While we are at it, we can tweak some of them and play around with the tables to see what we get.\nThe multiplication table Consider the standard \\(10 \\times 10\\) multiplication table, with the first row and the first column taking the values \\(1\\) through \\(10\\), forming a grid with the corresponding products.\nlibrary(tidyverse) # Data frame with all the values of the 10x10 multiplication table multiplication_table \u0026lt;- tibble( x = 1:10, y = 1:10 ) %\u0026gt;% # Get all combination of x and y complete(x, y) %\u0026gt;% # Get the product of all combinations mutate(product = x * y) ggplot(multiplication_table, aes(x, y)) + geom_tile(color = \u0026quot;white\u0026quot;) + geom_text(aes(label = product), color = \u0026quot;white\u0026quot;) + # We want the table to start with 1 in the upper-left corner scale_y_continuous(trans = \u0026quot;reverse\u0026quot;) + theme_void() For purposes that we will see next, I am going to add a row and a column of zeros above and to the left of our table, respectively:\n# We need 11 zeros in the new row and column multiplication_table \u0026lt;- tibble( x = c(1:10, rep(0, 11)), y = c(1:10, rep(0,11)) ) %\u0026gt;% complete(x, y) %\u0026gt;% mutate(product = x * y) %\u0026gt;% distinct() ggplot(multiplication_table, aes(x, y)) + geom_tile(color = \u0026quot;white\u0026quot;) + geom_text(aes(label = product), color = \u0026quot;white\u0026quot;) + scale_y_continuous(trans = \u0026quot;reverse\u0026quot;) + theme_void() Next, we will discover some beautiful symmetries by coloring the rectangles of the multiplication table that correspond to multiples of a number \\(k\\) for various values of \\(k\\).\n Single multiples We say that \\(c\\) is a multiple of \\(k\\) if \\(c = n k\\) for some integer \\(n\\), which is called the multiplier. So we can tell if a given number \\(c\\) is a multiple of \\(k\\) if the division \\(c\\) over \\(k\\) has remainder 0.\nLet’s begin with \\(k = 2\\):\nm2 \u0026lt;- multiplication_table %\u0026gt;% mutate(multiple_of_2 = product %% 2 == 0) ggplot(m2, aes(x, y)) + geom_tile(aes(fill = multiple_of_2), color = \u0026quot;white\u0026quot;) + geom_text(aes(label = product), color = \u0026quot;white\u0026quot;) + scale_y_continuous(trans = \u0026quot;reverse\u0026quot;) + scale_fill_manual(values = c(\u0026quot;black\u0026quot;, \u0026quot;#E69F00\u0026quot;), name = \u0026quot;Multiple of 2?\u0026quot;, labels = c(\u0026quot;No\u0026quot;, \u0026quot;Yes\u0026quot;)) + theme_void() ggplot(m2, aes(x, y)) + geom_tile(aes(fill = multiple_of_2), color = \u0026quot;white\u0026quot;) + geom_text(aes(label = product), color = \u0026quot;white\u0026quot;) + scale_y_continuous(trans = \u0026quot;reverse\u0026quot;) + # Change default colors and edit legend scale_fill_brewer(palette = \u0026quot;Pastel1\u0026quot;, name = \u0026quot;Multiple of 2?\u0026quot;, labels = c(\u0026quot;No\u0026quot;, \u0026quot;Yes\u0026quot;)) + theme_void() We can see that the whole pattern above can be pieced together using the following fundamental block:\nWe want to explore the patterns for different values of \\(k\\) so let’s create a function:\nlibrary(wesanderson) draw_pattern \u0026lt;- function(k, xmax = k * 4, ymax = k * 4) { tab \u0026lt;- data.frame( x = c(1:xmax, rep(0, xmax + 1)), y = c(1:ymax, rep(0, ymax + 1)) ) %\u0026gt;% complete(x, y) %\u0026gt;% mutate(prod = x * y, multiple = prod %% k == 0) ggplot(tab, aes(x, y)) + geom_tile(aes(fill = multiple)) + scale_y_continuous(trans = \u0026quot;reverse\u0026quot;) + scale_fill_manual(values = wes_palette(name = \u0026quot;Zissou1\u0026quot;, n = 2)) + #geom_text(aes(label = prod)) + theme_void() + guides(fill = FALSE) } draw_pattern(15)  Multiple multiples multiple_multiples \u0026lt;- m2 %\u0026gt;% mutate(multiple_of_3 = product %% 3 == 0, inter = interaction(multiple_of_2, multiple_of_3)) multiple_multiples ## # A tibble: 121 x 6 ## x y product multiple_of_2 multiple_of_3 inter ## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;lgl\u0026gt; \u0026lt;lgl\u0026gt; \u0026lt;fct\u0026gt; ## 1 0 0 0 TRUE TRUE TRUE.TRUE ## 2 0 1 0 TRUE TRUE TRUE.TRUE ## 3 0 2 0 TRUE TRUE TRUE.TRUE ## 4 0 3 0 TRUE TRUE TRUE.TRUE ## 5 0 4 0 TRUE TRUE TRUE.TRUE ## 6 0 5 0 TRUE TRUE TRUE.TRUE ## 7 0 6 0 TRUE TRUE TRUE.TRUE ## 8 0 7 0 TRUE TRUE TRUE.TRUE ## 9 0 8 0 TRUE TRUE TRUE.TRUE ## 10 0 9 0 TRUE TRUE TRUE.TRUE ## # ... with 111 more rows summary(multiple_multiples) ## x y product multiple_of_2 multiple_of_3 ## Min. : 0 Min. : 0 Min. : 0 Mode :logical Mode :logical ## 1st Qu.: 2 1st Qu.: 2 1st Qu.: 5 FALSE:25 FALSE:49 ## Median : 5 Median : 5 Median : 18 TRUE :96 TRUE :72 ## Mean : 5 Mean : 5 Mean : 25 ## 3rd Qu.: 8 3rd Qu.: 8 3rd Qu.: 40 ## Max. :10 Max. :10 Max. :100 ## inter ## FALSE.FALSE: 9 ## TRUE.FALSE :40 ## FALSE.TRUE :16 ## TRUE.TRUE :56 ## ##  ggplot(multiple_multiples, aes(x, y)) + geom_tile(aes(fill = inter)) + scale_fill_brewer(palette = \u0026quot;Pastel1\u0026quot;) + scale_y_continuous(trans = \u0026quot;reverse\u0026quot;) + theme_void()  ","date":1541462400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541462400,"objectID":"207556d83dfab6b0c41b53f89be907d2","permalink":"/post/multiplication-table-with-r/","publishdate":"2018-11-06T00:00:00Z","relpermalink":"/post/multiplication-table-with-r/","section":"post","summary":"I was reading about the Hidden beauty of multiplication tables and I thought it could be fun to make some of the cool plots in that article with R. While we are at it, we can tweak some of them and play around with the tables to see what we get.\nThe multiplication table Consider the standard \\(10 \\times 10\\) multiplication table, with the first row and the first column taking the values \\(1\\) through \\(10\\), forming a grid with the corresponding products.","tags":["R","Mathematics"],"title":"Exploring the multiplication table with R","type":"post"},{"authors":null,"categories":["R","Español"],"content":"Después de muchas pruebas e intentos he decidido por fin publicar mi página web personal. Llevaba queriendo hacerlo desde hace meses, pero siempre lo dejaba para más adelante por una cosa o la otra. Que si no tenía tiempo, que si el tema (theme) no es perfecto, que si lo hago en inglés o en español… En realidad eran excusas de un introvertido para no poner su trabajo a la vista de todos.\nSi utilizas R y RStudio como yo, parece que lo más cómodo y práctico es utilizar el fántastico paquete blogdown que utiliza Hugo para construir la página web. blogdown te permite crear y modificar la página desde RStudio. El e-book blogdown: Creating Websites with R Markdown me ha sido de mucha ayuda a la hora de crear mi página.\nFinalmente, de entre la multitud de temas que hay disponibles, me decidí por el tema academic ya que contiene una muy completa documentación e incorpora básicamente todos los requerimientos necesarios para escribir sobre estadística:\n Posibilidad de escribir entradas en RMarkdown\n Soporte de \\(\\LaTeX\\) para notación matemática\n Muy flexible a la hora de personalizar la página\n Posibilidad de traducir toda la página a diferentes idiomas\n  Paso a paso A continuación detallo los pasos que he seguido para crear y publicar mi web.\n1. Crear un repositorio en GitHub Para publicar la página web utilizaremos Netlify, que nos permite sincronizar el repositorio remoto de nuestra web y actualizarla automáticamente 1. Por lo tanto vamos a necesitar crear un repositorio en nuestra cuenta de GitHub (GitBucket/GitLab). Si eres nuevo en esto del control de versiones, Jenny Bryan tiene un fantástico tutorial especialmente escrito para usuarios de RStudio.\nAsí pues, creamos el repositorio en nuestra cuenta de GitHub y copiamos la URL del repositorio a través del botón Clone or download.\nA continuación, creamos un proyecto nuevo en RStudio y seleccionamos la opción de Version Control. Introducimos la dirección URL de nuestro repositorio que copiamos al portapapeles anteriormente y creamos nuestro proyecto.\nAhora nuestro repositorio remoto y nuestro repositorio local están conectados y podremos mandar los cambios que hagamos en RStudio a nuestro repositorio remoto en GitHub (y viceversa).\n 2. Construir la estructura de la web con blogdown En RStudio, instalamos el paquete blogdown y posteriormente Hugo:\ninstall.packages(\u0026quot;blogdown\u0026quot;) blogdown::install_hugo() A continuación creamos la estructura de la web escribiendo en la consola:\nblogdown::new_site(theme = \u0026quot;gcushen/hugo-academic\u0026quot;) Si quisieramos utilizar otro tema de Hugo simplemente cambiamos gcushen/hugo-academic por el usuario/repo correspondiente a la página del repositorio en GitHub.\n 3. Personalizar la página Una vez creada la estructura de la página web, podemos utilizar el Addin de RStudio Serve site para visualizar nuestra web dentro de RStudio o en nuestro navegador. Esto básicamente llama la función blogdown::serve_site(). Ahora cada vez que guardemos algún cambio podremos ver interactivamente cómo queda en nuestra web.\nAl utilizar blogdown::new_site(theme = \u0026quot;gcushen/hugo-academic\u0026quot;) se crean una serie de archivos que se corresponden con una página web ejemplo que podemos modificar a nuestro gusto.\nLo primero que querremos modificar será el archivo config.toml. Examina el archivo y modifica todo lo que quieras. Lee los comentarios para entender qué indica cada campo y cómo modificarlo.\nPara modificar qué elementos aparecen en el menú de navegación de la página, puedes borrar o comentar (#) las entradas bajo [[menu.main]] que no quieres mostrar:\n[[menu.main]] name = \u0026quot;About\u0026quot; url = \u0026quot;#about\u0026quot; weight = 1 #[[menu.main]] # name = \u0026quot;Publications\u0026quot; # url = \u0026quot;#publications_selected\u0026quot; # weight = 2 También querrás cambiar las secciones (o widgets) que quieres que se muestren en tu página principal. La página de ejemplo viene con todas las secciones activas. Para que no se muestre una sección basta con indicar active = false en el front-matter del correspondiente archivo .md en el directorio content/home. En mi caso, tan solo tengo activas about.md, posts.md, projects.md, experience.md, tags.md y search.md.\n 4. Traducir página al castellano Como mencionamos al principio de esta entrada, Academic dispone de la opción de traducir toda la página web a otro idioma de forma relativamente sencilla. Por un lado está la traducción de la interfaz y por otro el contenido de la página.\nInterfaz El texto de la interfaz para este tema está en archivos yaml en el fichero themes/academic/i18n/. Para traducir el texto de la interfaz debemos crear primero un fichero en la raiz de nuestro proyecto llamado i18n. A continuación copiamos el archivo themes/academic/i18n/es.yaml a nuestro nuevo fichero i18n/es.yaml.\nSi vamos al final del archivo config.yaml podemos encontrar instrucciones de cómo traducir los diferentes campos de la interfaz de nuestra web. En mi caso:\n[languages.es] languageCode = \u0026quot;es\u0026quot; title = \u0026quot;Sergio Olmos\u0026quot; [languages.es.params] name = \u0026quot;Sergio Olmos Pardo\u0026quot; role = \u0026quot;Estadístico y jugador de baloncesto\u0026quot; A continuación traducimos los elementos del menú de navegación. Si sólo quieres tener la página en castellano basta con editar los elementos [[menu.main]] en config.toml. Sin embargo, si queremos habilitar la posibilidad de elegir el idioma de nuestra página tenemos que duplicar los elementos [[menu.main]] y cambiarles el nombre a [[languages.es.menu.main]].\nEn mi caso, el menú de navegación en castellano viene dado por:\n [[languages.es.menu.main]] name = \u0026quot;Sobre mí\u0026quot; url = \u0026quot;#about\u0026quot; weight = 1 [[languages.es.menu.main]] name = \u0026quot;Blog\u0026quot; url = \u0026quot;#posts\u0026quot; weight = 2 [[languages.es.menu.main]] name = \u0026quot;Proyectos\u0026quot; url = \u0026quot;#projects\u0026quot; weight = 3 [[languages.es.menu.main]] name = \u0026quot;Experiencia\u0026quot; url = \u0026quot;#experience\u0026quot; weight = 4  Contenido Para traducir un archivo de nuestro fichero content/ debemos realizar una copia del archivo y llamarlo filename.es.md, donde filename es el nombre del archivo original en inglés. Finalmente traducimos el texto del nuevo archivo.\nPor ejemplo, si queremos traducir el widget content/home/about.md deberemos copiar este archivo y renombrarlo como content/home/about.es.md y redactar el texto dentro de este archivo en castellano.\nDe igual modo, si queremos traducir una entrada de nuestro blog deberemos copiar el archivo content/post/filename.md y renombrarlo como content/post/filename.es.md.\nTenemos que tener en cuenta que los archivos que no tengan la extensión filename.es no aparecerán en la versión de la página en castellano. Por lo que si algunas de tus entradas están en inglés pero quieres mostrarlas igualmente en la versión en castellano de tu página deberás tener dos archivos iguales pero con nombres filename y filename.es.\n  5. Publicar página con Netlify El paso final es publicar la página web que hemos creado para que todo el mundo pueda acceder a ella. El autor de blogdown recomienda usar Netlify y yo he seguido su consejo. Me ha resultado bastante sencillo y parece muy práctico ya que tan solo necesitaremos empujar nuestros cambios al repositorio remoto en Github y Netlify actualizará la página web automáticamente.\nNos registramos en Netlify y una vez en nuestra página principal pinchamos en el botón New site from Git. Nos conectamos a nuestra cuenta de GitHub y elegimos el repositorio de nuestra web.\nEn mi caso he tenido problemas con la versión de Hugo por defecto. Para saber qué versión hemos utilizado para construir la página, introduce lo siguiente en la consola de RStudio:\nblogdown::hugo_version() ## [1] \u0026#39;0.49.2\u0026#39; Queremos que Netlify utilice esta versión y para ello creamos una nueva environment variable con la llave (key) HUGO_VERSION y el valor (value) 0.49.2.\nSi todo va bien, nuestra web deberá estar publicada con una dirección generada automáticamente por Netlify. Podemos cambiar el nombre de la página de modo que la dirección quede por ejemplo como http://solmos.netlify.com. O incluso podemos comprar o conectar nuestro propio dominio.\n   En la documentación de Academic existe la posibilidad de crear la página web directamente con Netlify de modo que la publicación de la página resulta más sencilla. Sin embargo, con este método he tenido problemas para visualizar la página en RStudio.↩\n   ","date":1540684800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1540684800,"objectID":"d7b1b016cb95d84f2c5471950bedab6b","permalink":"/post/web_con_blogdown/","publishdate":"2018-10-28T00:00:00Z","relpermalink":"/post/web_con_blogdown/","section":"post","summary":"Tutorial paso a paso de cómo creé mi página web personal con blogdown y el tema de Hugo Academic.","tags":["R"],"title":"Cómo creé mi página web con blogdown","type":"post"},{"authors":null,"categories":[],"content":"Plot something\nsummary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00 plot(cars$speed, cars$dist) ","date":1540339200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1540339200,"objectID":"29151a183886aac45ecd0c303cbbcbe8","permalink":"/post/post-1/","publishdate":"2018-10-24T00:00:00Z","relpermalink":"/post/post-1/","section":"post","summary":"Plot something\nsummary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00 plot(cars$speed, cars$dist) ","tags":[],"title":"Post 1","type":"post"},{"authors":null,"categories":null,"content":" In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 \u0026hellip;\nTip 2 \u0026hellip;\n","date":1536444000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1536444000,"objectID":"6a451186c775f5f0adb3a0416d0cb711","permalink":"/tutorial/example/","publishdate":"2018-09-09T00:00:00+02:00","relpermalink":"/tutorial/example/","section":"tutorial","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 \u0026hellip;\nTip 2 \u0026hellip;","tags":null,"title":"Example Page","type":"docs"},{"authors":[],"categories":null,"content":"Click on the Slides button above to view the built-in slides feature.\n Slides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using url_slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1483225200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1483225200,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"/talk/example/","publishdate":"2017-01-01T00:00:00+01:00","relpermalink":"/talk/example/","section":"talk","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam.","tags":[],"title":"Example Talk","type":"talk"},{"authors":null,"categories":null,"content":"","date":1461708000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461708000,"objectID":"f3e2e8505a3f890c5ffe9840d37e8bb0","permalink":"/project/tfm/","publishdate":"2016-04-27T00:00:00+02:00","relpermalink":"/project/tfm/","section":"project","summary":"Master's thesis","tags":["statistics","linear mixed models","multilevel models","hierarchical models"],"title":"Analysis of clustered data using linear mixed models","type":"project"},{"authors":[],"categories":null,"content":" Academic makes it easy to create a beautiful website for free using Markdown. Customize anything on your site with widgets, themes, and language packs.\nFollow our easy step by step guide to learn how to build your own free website with Academic. Check out the personal demo or the business demo of what you\u0026rsquo;ll get in less than 10 minutes.\n View the documentation Ask a question Request a feature or report a bug Updating? View the Update Guide and Release Notes Support development of Academic:  Donate a coffee Decorate your laptop or journal with an Academic sticker Wear the T-shirt   \nKey features:\n Easily manage various content including homepage, blog posts, publications, talks, and projects Extensible via color themes and widgets/plugins Write in Markdown for easy formatting and code highlighting, with LaTeX for mathematical expressions Social/academic network linking, Google Analytics, and Disqus comments Responsive and mobile friendly Simple and refreshing one page design Multilingual and easy to customize  Color Themes Academic is available in different color themes and font themes.\n         Ecosystem Academic Admin: An admin tool to import publications from BibTeX or import assets for an offline site\nInstall You can choose from one of the following four methods to install:\n one-click install using your web browser (recommended) install on your computer using Git with the Command Prompt/Terminal app install on your computer by downloading the ZIP files install on your computer with RStudio  Quick install using your web browser  Install Academic with Netlify  Netlify will provide you with a customizable URL to access your new site  On GitHub, go to your newly created academic-kickstart repository and edit config.toml to personalize your site. Shortly after saving the file, your site will automatically update Read the Quick Start Guide to learn how to add Markdown content. For inspiration, refer to the Markdown content which powers the Demo  Install with Git Prerequisites:\n Download and install Git Download and install Hugo   Fork the Academic Kickstart repository and clone your fork with Git:\ngit clone https://github.com/sourcethemes/academic-kickstart.git My_Website  Note that if you forked Academic Kickstart, the above command should be edited to clone your fork, i.e. replace sourcethemes with your GitHub username.\n Initialize the theme:\ncd My_Website git submodule update --init --recursive   Install with ZIP  Download and extract Academic Kickstart Download and extract the Academic theme to the themes/academic/ folder from the above step  Install with RStudio View the guide to installing Academic with RStudio\nQuick start  If you installed on your computer, view your new website by running the following command:\nhugo server  Now visit localhost:1313 and your new Academic powered website will appear. Otherwise, if using Netlify, they will provide you with your URL.\n Read the Quick Start Guide to learn how to add Markdown content, customize your site, and deploy it. For inspiration, refer to the Markdown content which powers the Demo\n Build your site by running the hugo command. Then host it for free using Github Pages or Netlify (refer to the first installation method). Alternatively, copy the generated public/ directory (by FTP, Rsync, etc.) to your production web server (such as a university\u0026rsquo;s hosting service).\n  Updating Feel free to star the project on Github to help keep track of updates and check out the release notes prior to updating your site.\nBefore updating the framework, it is recommended to make a backup of your entire website directory (or at least your themes/academic directory) and record your current version number.\nBy default, Academic is installed as a Git submodule which can be updated by running the following command:\ngit submodule update --remote --merge  Check out the update guide for full instructions and alternative methods.\nFeedback \u0026amp; Contributing Please use the issue tracker to let me know about any bugs or feature requests, or alternatively make a pull request.\nFor support, head over to the Hugo discussion forum.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1461103200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1515798000,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"/post/getting-started/","publishdate":"2016-04-20T00:00:00+02:00","relpermalink":"/post/getting-started/","section":"post","summary":"Create a beautifully simple website or blog in under 10 minutes.","tags":["Academic"],"title":"Academic: the website designer for Hugo","type":"post"},{"authors":["GA Cushen"],"categories":null,"content":"More detail can easily be written here using Markdown and $\\rm \\LaTeX$ math code.\n","date":1441058400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441058400,"objectID":"d77fa4a74076ffcd7ca6c21cfc27a4b2","permalink":"/publication/person-re-id/","publishdate":"2015-09-01T00:00:00+02:00","relpermalink":"/publication/person-re-id/","section":"publication","summary":"Person re-identification is a critical security task for recognizing a person across spatially disjoint sensors. Previous work can be computationally intensive and is mainly based on low-level cues extracted from RGB data and implemented on a PC for a fixed sensor network (such as traditional CCTV). We present a practical and efficient framework for mobile devices (such as smart phones and robots) where high-level semantic soft biometrics are extracted from RGB and depth data. By combining these cues, our approach attempts to provide robustness to noise, illumination, and minor variations in clothing. This mobile approach may be particularly useful for the identification of persons in areas ill-served by fixed sensors or for tasks where the sensor position and direction need to dynamically adapt to a target. Results on the BIWI dataset are preliminary but encouraging. Further evaluation and demonstration of the system will be available on our website.","tags":[],"title":"A Person Re-Identification System For Mobile Devices","type":"publication"},{"authors":null,"categories":["R"],"content":"R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nsummary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00 fit \u0026lt;- lm(dist ~ speed, data = cars) fit ## ## Call: ## lm(formula = dist ~ speed, data = cars) ## ## Coefficients: ## (Intercept) speed ## -17.579 3.932  Including Plots You can also embed plots. See Figure 1 for example:\npar(mar = c(0, 1, 0, 1)) pie( c(280, 60, 20), c(\u0026#39;Sky\u0026#39;, \u0026#39;Sunny side of pyramid\u0026#39;, \u0026#39;Shady side of pyramid\u0026#39;), col = c(\u0026#39;#0292D8\u0026#39;, \u0026#39;#F7EA39\u0026#39;, \u0026#39;#C4B632\u0026#39;), init.angle = -50, border = NA )  Figure 1: A fancy pie chart.   Math You can write math with LaTex:\n\\[f(x) = \\sum_{i = 1}^n X_i / n\\]\n ","date":1437703994,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1437703994,"objectID":"10065deaa3098b0da91b78b48d0efc71","permalink":"/post/2015-07-23-r-rmarkdown/","publishdate":"2015-07-23T21:13:14-05:00","relpermalink":"/post/2015-07-23-r-rmarkdown/","section":"post","summary":"This is a summary.","tags":["R Markdown","plot","regression"],"title":"Hello R Markdown","type":"post"},{"authors":["GA Cushen","MS Nixon"],"categories":null,"content":"More detail can easily be written here using Markdown and $\\rm \\LaTeX$ math code.\n","date":1372629600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372629600,"objectID":"2b4d919e3cf73dfcd0063c88fe01cb00","permalink":"/publication/clothing-search/","publishdate":"2013-07-01T00:00:00+02:00","relpermalink":"/publication/clothing-search/","section":"publication","summary":"We present a mobile visual clothing search system whereby a smart phone user can either choose a social networking photo or take a new photo of a person wearing clothing of interest and search for similar clothing in a retail database. From the query image, the person is detected, clothing is segmented, and clothing features are extracted and quantized. The information is sent from the phone client to a server, where the feature vector of the query image is used to retrieve similar clothing products from online databases. The phone's GPS location is used to re-rank results by retail store location. State of the art work focuses primarily on the recognition of a diverse range of clothing offline and pays little attention to practical applications. Evaluated on a challenging dataset, the system is relatively fast and achieves promising results.","tags":[],"title":"Mobile visual clothing search","type":"publication"},{"authors":null,"categories":null,"content":" Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = \\;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \nA fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears  Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view   Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links   night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links  Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"c2915ec5da95791851caafdcba9664af","permalink":"/slides/example-slides/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/slides/example-slides/","section":"slides","summary":"Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$","tags":null,"title":"Slides","type":"slides"}]