[{"authors":null,"categories":["R","Español"],"content":"Después de muchas pruebas e intentos he decidido por fin publicar mi página web personal. Llevaba queriendo hacerlo desde hace meses, pero siempre lo dejaba para más adelante por una cosa o la otra. Que si no tenía tiempo, que si el tema (theme) no es perfecto, que si lo hago en inglés o en español… En realidad eran excusas de un introvertido para no poner su trabajo a la vista de todos.\nSi utilizas R y RStudio como yo, parece que lo más cómodo y práctico es utilizar el fántastico paquete blogdown que utiliza Hugo para construir la página web. blogdown te permite crear y modificar la página desde RStudio. El e-book blogdown: Creating Websites with R Markdown me ha sido de mucha ayuda a la hora de crear mi página.\nFinalmente, de entre la multitud de temas que hay disponibles, me decidí por el tema academic ya que contiene una muy completa documentación e incorpora básicamente todos los requerimientos necesarios para escribir sobre estadística:\n Posibilidad de escribir entradas en RMarkdown\n Soporte de \\(\\LaTeX\\) para notación matemática\n Muy flexible a la hora de personalizar la página\n Posibilidad de traducir toda la página a diferentes idiomas\n  Paso a paso A continuación detallo los pasos que he seguido para crear y publicar mi web.\n1. Crear un repositorio en GitHub Para publicar la página web utilizaremos Netlify, que nos permite sincronizar el repositorio remoto de nuestra web y actualizarla automáticamente 1. Por lo tanto vamos a necesitar crear un repositorio en nuestra cuenta de GitHub (GitBucket/GitLab). Si eres nuevo en esto del control de versiones, Jenny Bryan tiene un fantástico tutorial especialmente escrito para usuarios de RStudio.\nAsí pues, creamos el repositorio en nuestra cuenta de GitHub y copiamos la URL del repositorio a través del botón Clone or download.\nA continuación, creamos un proyecto nuevo en RStudio y seleccionamos la opción de Version Control. Introducimos la dirección URL de nuestro repositorio que copiamos al portapapeles anteriormente y creamos nuestro proyecto.\nAhora nuestro repositorio remoto y nuestro repositorio local están conectados y podremos mandar los cambios que hagamos en RStudio a nuestro repositorio remoto en GitHub (y viceversa).\n 2. Construir la estructura de la web con blogdown En RStudio, instalamos el paquete blogdown y posteriormente Hugo:\ninstall.packages(\u0026quot;blogdown\u0026quot;) blogdown::install_hugo() A continuación creamos la estructura de la web escribiendo en la consola:\nblogdown::new_site(theme = \u0026quot;gcushen/hugo-academic\u0026quot;) Si quisieramos utilizar otro tema de Hugo simplemente cambiamos gcushen/hugo-academic por el usuario/repo correspondiente a la página del repositorio en GitHub.\n 3. Personalizar la página Una vez creada la estructura de la página web, podemos utilizar el Addin de RStudio Serve site para visualizar nuestra web dentro de RStudio o en nuestro navegador. Esto básicamente llama la función blogdown::serve_site(). Ahora cada vez que guardemos algún cambio podremos ver interactivamente cómo queda en nuestra web.\nAl utilizar blogdown::new_site(theme = \u0026quot;gcushen/hugo-academic\u0026quot;) se crean una serie de archivos que se corresponden con una página web ejemplo que podemos modificar a nuestro gusto.\nLo primero que querremos modificar será el archivo config.toml. Examina el archivo y modifica todo lo que quieras. Lee los comentarios para entender qué indica cada campo y cómo modificarlo.\nPara modificar qué elementos aparecen en el menú de navegación de la página, puedes borrar o comentar (#) las entradas bajo [[menu.main]] que no quieres mostrar:\n[[menu.main]] name = \u0026quot;About\u0026quot; url = \u0026quot;#about\u0026quot; weight = 1 #[[menu.main]] # name = \u0026quot;Publications\u0026quot; # url = \u0026quot;#publications_selected\u0026quot; # weight = 2 También querrás cambiar las secciones (o widgets) que quieres que se muestren en tu página principal. La página de ejemplo viene con todas las secciones activas. Para que no se muestre una sección basta con indicar active = false en el front-matter del correspondiente archivo .md en el directorio content/home. En mi caso, tan solo tengo activas about.md, posts.md, projects.md, experience.md, tags.md y search.md.\n 4. Traducir página al castellano Como mencionamos al principio de esta entrada, Academic dispone de la opción de traducir toda la página web a otro idioma de forma relativamente sencilla. Por un lado está la traducción de la interfaz y por otro el contenido de la página.\nInterfaz El texto de la interfaz para este tema está en archivos yaml en el fichero themes/academic/i18n/. Para traducir el texto de la interfaz debemos crear primero un fichero en la raiz de nuestro proyecto llamado i18n. A continuación copiamos el archivo themes/academic/i18n/es.yaml a nuestro nuevo fichero i18n/es.yaml.\nSi vamos al final del archivo config.yaml podemos encontrar instrucciones de cómo traducir los diferentes campos de la interfaz de nuestra web. En mi caso:\n[languages.es] languageCode = \u0026quot;es\u0026quot; title = \u0026quot;Sergio Olmos\u0026quot; [languages.es.params] name = \u0026quot;Sergio Olmos Pardo\u0026quot; role = \u0026quot;Estadístico y jugador de baloncesto\u0026quot; A continuación traducimos los elementos del menú de navegación. Si sólo quieres tener la página en castellano basta con editar los elementos [[menu.main]] en config.toml. Sin embargo, si queremos habilitar la posibilidad de elegir el idioma de nuestra página tenemos que duplicar los elementos [[menu.main]] y cambiarles el nombre a [[languages.es.menu.main]].\nEn mi caso, el menú de navegación en castellano viene dado por:\n [[languages.es.menu.main]] name = \u0026quot;Sobre mí\u0026quot; url = \u0026quot;#about\u0026quot; weight = 1 [[languages.es.menu.main]] name = \u0026quot;Blog\u0026quot; url = \u0026quot;#posts\u0026quot; weight = 2 [[languages.es.menu.main]] name = \u0026quot;Proyectos\u0026quot; url = \u0026quot;#projects\u0026quot; weight = 3 [[languages.es.menu.main]] name = \u0026quot;Experiencia\u0026quot; url = \u0026quot;#experience\u0026quot; weight = 4  Contenido Para traducir un archivo de nuestro fichero content/ debemos realizar una copia del archivo y llamarlo filename.es.md, donde filename es el nombre del archivo original en inglés. Finalmente traducimos el texto del nuevo archivo.\nPor ejemplo, si queremos traducir el widget content/home/about.md deberemos copiar este archivo y renombrarlo como content/home/about.es.md y redactar el texto dentro de este archivo en castellano.\nDe igual modo, si queremos traducir una entrada de nuestro blog deberemos copiar el archivo content/post/filename.md y renombrarlo como content/post/filename.es.md.\nTenemos que tener en cuenta que los archivos que no tengan la extensión filename.es no aparecerán en la versión de la página en castellano. Por lo que si algunas de tus entradas están en inglés pero quieres mostrarlas igualmente en la versión en castellano de tu página deberás tener dos archivos iguales pero con nombres filename y filename.es.\n  5. Publicar página con Netlify El paso final es publicar la página web que hemos creado para que todo el mundo pueda acceder a ella. El autor de blogdown recomienda usar Netlify y yo he seguido su consejo. Me ha resultado bastante sencillo y parece muy práctico ya que tan solo necesitaremos empujar nuestros cambios al repositorio remoto en Github y Netlify actualizará la página web automáticamente.\nNos registramos en Netlify y una vez en nuestra página principal pinchamos en el botón New site from Git. Nos conectamos a nuestra cuenta de GitHub y elegimos el repositorio de nuestra web.\nEn mi caso he tenido problemas con la versión de Hugo por defecto. Para saber qué versión hemos utilizado para construir la página, introduce lo siguiente en la consola de RStudio:\nblogdown::hugo_version() ## [1] \u0026#39;0.49.2\u0026#39; Queremos que Netlify utilice esta versión y para ello creamos una nueva environment variable con la llave (key) HUGO_VERSION y el valor (value) 0.49.2.\nSi todo va bien, nuestra web deberá estar publicada con una dirección generada automáticamente por Netlify. Podemos cambiar el nombre de la página de modo que la dirección quede por ejemplo como http://solmos.netlify.com. O incluso podemos comprar o conectar nuestro propio dominio.\n   En la documentación de Academic existe la posibilidad de crear la página web directamente con Netlify de modo que hace que la publicación de la página resulte más sencilla. Sin embargo, con este método he tenido problemas para visualizar la página en RStudio.↩\n   ","date":1540684800,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1540684800,"objectID":"c78575752969792c1aab6a9fd2d27ec8","permalink":"/es/post/web_con_blogdown/","publishdate":"2018-10-28T00:00:00Z","relpermalink":"/es/post/web_con_blogdown/","section":"post","summary":"Tutorial paso a paso de cómo creé mi página web personal con blogdown y el tema de Hugo Academic.","tags":["R"],"title":"Cómo creé mi página web con blogdown","type":"post"},{"authors":null,"categories":[],"content":"Plot something\nsummary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00 plot(cars$speed, cars$dist) ","date":1540339200,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1540339200,"objectID":"39488c8d8c4a7141a89c3eaae3cbd981","permalink":"/es/post/post-1/","publishdate":"2018-10-24T00:00:00Z","relpermalink":"/es/post/post-1/","section":"post","summary":"Plot something\nsummary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00 plot(cars$speed, cars$dist) ","tags":[],"title":"Post 1","type":"post"},{"authors":null,"categories":null,"content":"","date":1461708000,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1461708000,"objectID":"ab9d6b8d5274fb7e7927b1fc60f36192","permalink":"/es/project/tfm/","publishdate":"2016-04-27T00:00:00+02:00","relpermalink":"/es/project/tfm/","section":"project","summary":"Trabajo de fin de Máster","tags":["statistics","linear mixed models","multilevel models","hierarchical models"],"title":"Analysis of clustered data using linear mixed models","type":"project"}]