<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sergio Olmos on Sergio Olmos</title>
    <link>/</link>
    <description>Recent content in Sergio Olmos on Sergio Olmos</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Sun, 15 Oct 2017 00:00:00 +0200</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Analyzing FC Barcelona&#39;s assists pattern</title>
      <link>/post/2019-03-28-eurolig/analisis-asistencia/</link>
      <pubDate>Thu, 28 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019-03-28-eurolig/analisis-asistencia/</guid>
      <description>&lt;div id=&#34;introduction&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/solmos/eurolig&#34;&gt;&lt;code&gt;eurolig&lt;/code&gt;&lt;/a&gt; is an R package that I just created for obtaining and analyzing basketball data games from the Euroleague. In this post I show how to use the package to analyze different aspects of the way FC Barcelona passes the ball in this Euroleague 2018-2019. More specifically, we are interested in finding out:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;What type of shot each assist generates&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How many points are being generated by each assist&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Who assists who&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How to visualize the patterns of assists&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;eurolig&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;eurolig&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;eurolig&lt;/code&gt; package is in its initial phase and still has many bugs. At the moment of writing, the package only provides tools to work with play-by-play data, but I hope to add the possibility to work with other types of data shuch as shot location data and regular boxscore stats.&lt;/p&gt;
&lt;p&gt;The package can be installed from Github:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# install.packages(&amp;quot;devtools&amp;quot;)
devtools::install_github(&amp;quot;solmos/eurolig&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note, however, that the package is in its experimental phase and there will be numerous changes as I keep developing it. Having said that, I encourage you to download the package and play around with it. If you detect a bug or think of useful feature, please let me know.&lt;/p&gt;
&lt;p&gt;You can keep track of new features and releases in the &lt;code&gt;NEWS.md&lt;/code&gt; file from the package &lt;a href=&#34;https://github.com/solmos/eurolig&#34;&gt;repository&lt;/a&gt;.&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;analysis&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Analysis&lt;/h2&gt;
&lt;p&gt;The play-by-play data allow us to answer many questions that cannot be answered with the regular boxscore data. In this case, we will use these type of data to answer the questions of interest that we introduced above.&lt;/p&gt;
&lt;div id=&#34;data-extraction&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Data extraction&lt;/h3&gt;
&lt;p&gt;We can obtain the play-by-play data by entering the game code (or game codes) toguether with the starting year of the season we want into the &lt;code&gt;extract_pbp()&lt;/code&gt; function.&lt;/p&gt;
&lt;p&gt;The game code can be found in the URL of the game web page. For instance, the last game that FC Barcelona played in this Euroleague at the moment of writting was against Bayern Munich in the German city. The game URL is&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.euroleague.net/main/results/showgame?gamecode=219&amp;amp;seasoncode=E2018&#34; class=&#34;uri&#34;&gt;https://www.euroleague.net/main/results/showgame?gamecode=219&amp;amp;seasoncode=E2018&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We see that the game code is 219. Entering this code together with the corresponding year in &lt;code&gt;extract_pbp()&lt;/code&gt; we obtain the play-by-play data in a tidy data frame:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(eurolig)
game_pbp &amp;lt;- extract_pbp(game_code = 219, season = 2018)
game_pbp&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 518 x 18
##    game_code play_number team_code player_name play_type time_remaining
##    &amp;lt;fct&amp;gt;           &amp;lt;int&amp;gt; &amp;lt;fct&amp;gt;     &amp;lt;fct&amp;gt;       &amp;lt;fct&amp;gt;     &amp;lt;chr&amp;gt;         
##  1 219                 2 &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;        BP        10:00         
##  2 219                 3 MUN       RADOSEVIC,… TPOFF     09:59         
##  3 219                 4 BAR       TOMIC, ANTE TPOFF     09:59         
##  4 219                 5 BAR       RIBAS, PAU  3FGM      09:37         
##  5 219                 6 BAR       TOMIC, ANTE AS        09:35         
##  6 219                 7 MUN       LUCIC, VLA… 2FGA      09:20         
##  7 219                 8 BAR       TOMIC, ANTE D         09:18         
##  8 219                10 BAR       PANGOS, KE… 2FGA      08:58         
##  9 219                11 MUN       LUCIC, VLA… D         08:55         
## 10 219                12 MUN       JOVIC, STE… TO        08:34         
## # … with 508 more rows, and 12 more variables: quarter &amp;lt;fct&amp;gt;,
## #   points_home &amp;lt;dbl&amp;gt;, points_away &amp;lt;dbl&amp;gt;, team_name &amp;lt;fct&amp;gt;,
## #   player_id &amp;lt;fct&amp;gt;, player_dorsal &amp;lt;dbl&amp;gt;, play_info &amp;lt;chr&amp;gt;, seconds &amp;lt;dbl&amp;gt;,
## #   home_team &amp;lt;fct&amp;gt;, away_team &amp;lt;fct&amp;gt;, home &amp;lt;lgl&amp;gt;, season &amp;lt;int&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the present analysis we want to analyze more than just one game. Specifically, we want to obtain all the games FC Barcelona has played in this ongoing Euroleague. Instead of searching around the Euroleague website for all the different game codes, we can just use the function &lt;code&gt;extract_team_pbp()&lt;/code&gt;. With this function we just need to enter the three letter team code and the year we want to obtain the data for all the games that the team has played in the given season.&lt;/p&gt;
&lt;p&gt;Let’s proceed to download the data of the games that FC Barcelona has played so far (March 25, 2019):&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pbp &amp;lt;- extract_team_pbp(team = &amp;quot;BAR&amp;quot;, season = 2018)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that the process takes a relatively long time to return the final data frame. This in not a bug. The function is designed to be slow. The Euroleague’s API documentation asks to leave a few second between succesive requests.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;analysis-of-assists&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Analysis of assists&lt;/h3&gt;
&lt;p&gt;To answer the diferent questions that we mentioned in the introduction we are going to use the function &lt;code&gt;get_assists()&lt;/code&gt;. Entering the play-by-play data into this function we obtain a data frame with detailed information about each assist recorded in these games. This resulting data frame can be used to answer many interesting questions with just few lines of code.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)
assists &amp;lt;- get_assists(pbp, team = &amp;quot;BAR&amp;quot;)
assists&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 475 x 12
##    game_code season passer shooter shot_type points time_remaining quarter
##    &amp;lt;fct&amp;gt;     &amp;lt;fct&amp;gt;  &amp;lt;fct&amp;gt;  &amp;lt;fct&amp;gt;   &amp;lt;fct&amp;gt;      &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;          &amp;lt;fct&amp;gt;  
##  1 2         2018   HEURT… CLAVER… 2FG            1 09:43          1      
##  2 2         2018   CLAVE… TOMIC,… 2FG            2 08:39          1      
##  3 2         2018   HEURT… TOMIC,… 2FG            2 07:44          1      
##  4 2         2018   HEURT… SINGLE… 2FG            2 07:34          1      
##  5 2         2018   CLAVE… SINGLE… 2FG            3 03:19          1      
##  6 2         2018   ORIOL… SERAPH… 2FG            2 00:46          1      
##  7 2         2018   SERAP… KURIC,… 3FG            3 00:13          1      
##  8 2         2018   HEURT… ORIOLA… 2FG            2 07:08          2      
##  9 2         2018   HEURT… SERAPH… 2FG            2 04:58          2      
## 10 2         2018   BLAZI… PUSTOV… 2FG            2 01:17          2      
## # … with 465 more rows, and 4 more variables: seconds &amp;lt;int&amp;gt;, foul &amp;lt;lgl&amp;gt;,
## #   and1 &amp;lt;dbl&amp;gt;, ftm &amp;lt;dbl&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;what-type-of-shot-each-player-generates-when-he-assists-a-teamate&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;What type of shot each player generates when he assists a teamate?&lt;/h4&gt;
&lt;p&gt;With the &lt;code&gt;assists&lt;/code&gt; data frame we can find out what type of shot each assist leads to. An assists can lead to three point shot, a two point shot, a shooting foul (where at aleast one foul shot is made) or an &lt;em&gt;and 1&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;In this case, let’s say we are only interested in knowing whether the shot following an assist was a two or a three point shot. The FC Barcelona players with at least 10 assists total have distributed their assists as follows:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;assists %&amp;gt;% 
    group_by(passer) %&amp;gt;% 
    summarise(
        assists = n(),
        two_pointers = sum(shot_type == &amp;quot;2FG&amp;quot;, na.rm = TRUE),
        three_pointers = sum(shot_type == &amp;quot;3FG&amp;quot;, na.rm = TRUE),
        `3pt_ratio` = round(three_pointers / assists, 3)
    ) %&amp;gt;% 
    arrange(desc(assists)) %&amp;gt;% 
    filter(assists &amp;gt; 10)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;passer&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;assists&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;two_pointers&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;three_pointers&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;3pt_ratio&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;HEURTEL, THOMAS&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;138&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;101&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;37&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.268&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;PANGOS, KEVIN&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;92&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;55&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;36&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.391&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;TOMIC, ANTE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;53&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;34&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;19&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.358&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;RIBAS, PAU&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;47&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;33&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;14&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.298&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;HANGA, ADAM&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;30&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;20&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.333&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;SINGLETON, CHRIS&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;26&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;15&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.423&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;CLAVER, VICTOR&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;23&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.478&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;KURIC, KYLE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;21&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;13&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.381&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;ORIOLA, PIERRE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;15&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.467&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;BLAZIC, JAKA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.250&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;SERAPHIN, KEVIN&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.333&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;In this case, Heurtel has the second lowest ratio of assists to three pointers with respect total assists (0.268). On the other hand, Pangos has a substantially higher proportion of assists that lead to three pointers (0.391).&lt;/p&gt;
&lt;p&gt;It’s the big and mobile players, like Claver, Singleton or Oriola, that have the highest proportion of assists going to three pointers.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;how-many-points-each-players-assists-generate&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;How many points each player’s assists generate?&lt;/h4&gt;
&lt;p&gt;As we have seen, not all assists are created equal. An assist to a three pointer generates two more points than an assist that results in a shooting foul where the shooter only scores one foul shot.&lt;/p&gt;
&lt;p&gt;With the following lines of code we can compute how many points each player’s assists generated:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;assists %&amp;gt;% 
    group_by(passer) %&amp;gt;% 
    summarise(
        assists = n(),
        points = sum(points, na.rm = TRUE),
        ppa = round(points / assists, 3)
    ) %&amp;gt;% 
    arrange(desc(assists)) %&amp;gt;% 
    filter(assists &amp;gt; 10)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;passer&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;assists&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;points&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;ppa&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;HEURTEL, THOMAS&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;138&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;311&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.254&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;PANGOS, KEVIN&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;92&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;215&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.337&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;TOMIC, ANTE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;53&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;121&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.283&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;RIBAS, PAU&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;47&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;105&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.234&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;HANGA, ADAM&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;30&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;68&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.267&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;SINGLETON, CHRIS&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;26&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;63&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.423&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;CLAVER, VICTOR&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;23&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;58&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.522&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;KURIC, KYLE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;21&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;48&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.286&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;ORIOLA, PIERRE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;15&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;36&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.400&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;BLAZIC, JAKA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;26&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.167&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;SERAPHIN, KEVIN&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;28&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.333&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The last column of this data frame (&lt;code&gt;ppa&lt;/code&gt;) tells us how many Points Per Assist each player from FC Barcelona generates (with at least 10 assists). We observe that Claver and Singleton generate the highest value per assist, indicating that a relatively high proportion of their assists lead to a three point shot.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;who-assists-who&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Who assists who?&lt;/h4&gt;
&lt;p&gt;With play-by-play data, it is also possible to find out to whom each player’s assist go to. The ten most common combinations passer-shooter are shown below:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;assists %&amp;gt;% 
    group_by(passer, shooter) %&amp;gt;% 
    count() %&amp;gt;% 
    arrange(desc(n)) %&amp;gt;% 
    head(10)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;passer&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;shooter&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;n&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;HEURTEL, THOMAS&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;SERAPHIN, KEVIN&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;27&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;HEURTEL, THOMAS&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;TOMIC, ANTE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;24&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;PANGOS, KEVIN&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;TOMIC, ANTE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;22&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;HEURTEL, THOMAS&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ORIOLA, PIERRE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;21&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;HEURTEL, THOMAS&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;SINGLETON, CHRIS&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;17&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;PANGOS, KEVIN&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;KURIC, KYLE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;16&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;PANGOS, KEVIN&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;SERAPHIN, KEVIN&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;15&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;TOMIC, ANTE&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;SINGLETON, CHRIS&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;15&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;HEURTEL, THOMAS&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CLAVER, VICTOR&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;HEURTEL, THOMAS&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;KURIC, KYLE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The five most common combination passer-shooter are all from point guard to big man. We see that Heurtel connects very well with the bigs in his team, specially the two centers, Seraphin and Tomic. This explains the low proportion of assists to three point shots that we observed before.&lt;/p&gt;
&lt;p&gt;However, in order to have a more accurate picture we would need to know how many minutes each combination was together on the floor. This information would allow us to identify potential improvements when deciding lineups.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;how-to-visualize-assists&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;How to visualize assists&lt;/h4&gt;
&lt;p&gt;It is possible to summarise some of the data that we obtained before using a heatmap showing the distribution of assists among the players of FC Barcelona. The function &lt;code&gt;plot_heatmap()&lt;/code&gt; does just that:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot_heatmap(pbp, &amp;quot;BAR&amp;quot;) +
    ggplot2::labs(
        title = &amp;quot;FC Barcelona assist heatmap&amp;quot;,
        subtitle = &amp;quot;Euroleague 2018-2019 (first 28 games)&amp;quot;,
        x = &amp;quot;Shooter&amp;quot;,
        y = &amp;quot;Passer&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-03-28-eurolig/index_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The vertical axis represents the passer while the horizontal axis represents the player that shoots after the pass. The diagonal contains the total number of assists for each player. The color indicates the number of assists that a given player gives to other player.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Recamán&#39;s sequence</title>
      <link>/post/2019-02-20-la-secuencia-de-recaman/la-secuencia-de-recaman/</link>
      <pubDate>Wed, 20 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019-02-20-la-secuencia-de-recaman/la-secuencia-de-recaman/</guid>
      <description>&lt;p&gt;Take a look at the following sequence of numbers:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[0, 1, 3, 6, 2, 7, 13, 20, 12, 21, 11, 22, \ldots\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;If you have not seen it before, you probably will not be able to figure out the pattern in this sequence. It is the so called &lt;a href=&#34;https://oeis.org/A005132&#34;&gt;Recamán’s sequence&lt;/a&gt;, attributed to the Colombian mathematician Bernardo Recamán.&lt;/p&gt;
&lt;p&gt;Despite its apparent complexity, the rules that generate this sequence are quite simple. The best way to understand the generating algorithm is to draw the number line from 0 to, say, 7 to start:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-02-20-la-secuencia-de-recaman/index_files/figure-html/number%20line-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Basically, starting from &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;, in each step we try to move left by a number of units equal to the step we are taking. If the number in which we land is to the left of zero or it has already appeared before in our sequence, instead of moving left we move right.&lt;/p&gt;
&lt;p&gt;The writer Alex Bellos explains it much better in the following video of Numberphile: 
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/FGC5TdIiT9U&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;hr /&gt;
&lt;div id=&#34;implementation-in-r&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Implementation in R&lt;/h2&gt;
&lt;p&gt;For this blog post I have used R to generate and draw the Recamán sequence. In a few lines of code we can create a function that generates a given number of elements of this sequence:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Generate the first n numbers of the Recamán sequence
get_recaman &amp;lt;- function(n) {
    recaman_seq &amp;lt;- numeric(n)
    for (i in 1:length(recaman_seq)) {
        candidate &amp;lt;- recaman_seq[i] - i
        if (candidate &amp;gt; 0 &amp;amp; !(candidate %in% recaman_seq)) {
            recaman_seq[i + 1] &amp;lt;- candidate
        } else recaman_seq[i + 1] &amp;lt;- recaman_seq[i] + i
    }
    recaman_seq &amp;lt;- recaman_seq[-length(recaman_seq)]
    recaman_seq
}

get_recaman(20)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1]  0  1  3  6  2  7 13 20 12 21 11 22 10 23  9 24  8 25 43 62&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To draw the sequence we use semicircles that represent the jumps from one number to the other.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-02-20-la-secuencia-de-recaman/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Yo can find the code to draw the sequence &lt;a href=&#34;https://github.com/solmos/recaman-sequence&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;exploring-recamans-path&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Exploring Recaman’s path&lt;/h2&gt;
&lt;p&gt;Play around with the code and explore the sequence. Do you think that every integer eventually appears? It is conjectured that no, that there are holes along Recamán’s path.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-02-20-la-secuencia-de-recaman/index_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-02-20-la-secuencia-de-recaman/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-02-20-la-secuencia-de-recaman/index_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>rfeb: Shot charts with R</title>
      <link>/post/2019-01-24-graficos-de-tiro-con-r/shotcharts-with-r/</link>
      <pubDate>Thu, 24 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019-01-24-graficos-de-tiro-con-r/shotcharts-with-r/</guid>
      <description>&lt;p&gt;Kirk Goldsberry is one of the most popular figures in the basketball analytics world. He is known mainly for the use of shot charts in his analyses. Here there is an example with all the shots Lebron James has taken in his career:&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Happy Birthday, LeBron &lt;br&gt;His constellation so far... &lt;a href=&#34;https://t.co/4HuCjTgl4x&#34;&gt;pic.twitter.com/4HuCjTgl4x&lt;/a&gt;&lt;/p&gt;&amp;mdash; Kirk Goldsberry (@kirkgoldsberry) &lt;a href=&#34;https://twitter.com/kirkgoldsberry/status/1079446773956075526?ref_src=twsrc%5Etfw&#34;&gt;December 30, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;Shot charts can be useful for, say, identifying tenedencies on offense of a given player/team, showing what spots on the court a player is most effective at, or analyzing what type of shots a team allows its opponents.&lt;/p&gt;
&lt;p&gt;The league that I play in, called &lt;a href=&#34;http://www.leboro.es/inicio.aspx&#34;&gt;LEB Oro&lt;/a&gt;, provides shot charts in its platform, &lt;a href=&#34;http://baloncestoenvivo.feb.es/&#34;&gt;Baloncesto en Vivo&lt;/a&gt;. For this blog post, I created an R package called &lt;a href=&#34;https://github.com/solmos/rfeb&#34;&gt;&lt;code&gt;rfeb&lt;/code&gt;&lt;/a&gt;, that allows us to easily scrape the shot coordinates provided by this website and plot the shot charts of the game or games we want.&lt;/p&gt;
&lt;p&gt;Having said that, for some strange reason, the platform Baloncesto en Vivo does not provide any type of selection menu to access games played weeks before (or seasons before). Only the most recent games are visible.&lt;/p&gt;
&lt;p&gt;It is possible to access previous games if you know the game id and adding it to the base url (&lt;a href=&#34;http://baloncestoenvivo.feb.es/Game/&#34; class=&#34;uri&#34;&gt;http://baloncestoenvivo.feb.es/Game/&lt;/a&gt;). However, it appears as if the data gets erased as time goes by. At the moment of writting this post, only the games played before week 13 of this season are available.&lt;/p&gt;
&lt;p&gt;Moreover, the data themselves are a bit shaky. As I have come to find out, &lt;strong&gt;several gyms in the league produce shot charts that are obviously wrong&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Huesca and Real Canoe are the main suspects. I found several cases but take a look at this game between ZTE Real Canoe and Cerramimbre Valladolid played at the gym of the former. According to the &lt;a href=&#34;http://baloncestoenvivo.feb.es/Game/2010168#shotchart&#34;&gt;provided shot chart&lt;/a&gt; neither one of the two teams shot one shot inside the paint… Until these flagrant errors are eliminated, any analysis done with these data must be taken with a grain of salt.&lt;/p&gt;
&lt;div id=&#34;shot-charts&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Shot charts&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;rfeb&lt;/code&gt; is an R package that I created to work with the data available in Baloncesto en Vivo. &lt;code&gt;rfeb&lt;/code&gt; contains two main functions at the moment:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;extract_shots()&lt;/code&gt;: Scrapes the shot data of the specified game ids&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;plot_shotchart()&lt;/code&gt;: Plots shot charts with these data&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;rfeb&lt;/code&gt; package can be installed as follows:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# install.packages(&amp;quot;devtools&amp;quot;)
devtools::install_github(&amp;quot;solmos/rfeb&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can check out the code of these functions in its &lt;a href=&#34;https://github.com/solmos/rfeb&#34;&gt;Github repository&lt;/a&gt;. Note that even though I am going to extract data from my league (LEB Oro), it can also be used to work with the other leagues organized by the Spanish basketball federation (FEB).&lt;/p&gt;
&lt;p&gt;So I am going to use &lt;code&gt;rfeb&lt;/code&gt; to show how to plot shot charts with the data from the games played throughout the weekend of 01/11/2019.&lt;/p&gt;
&lt;p&gt;The ids of these games go from 2010208 to 2010216. I use &lt;code&gt;extract_shots()&lt;/code&gt; to scrape the shot data for these 9 games. We get a data frame where each row represents a shot taken, for which the following variables were recorded:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;t&lt;/code&gt; = Time elapsed since the start of the game&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt; = Shot coordinates&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;team&lt;/code&gt; = The team for which the player taking the shot plays&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;player&lt;/code&gt; = Jersey number of the player that took the shot&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;quarter&lt;/code&gt; = Quarter in which the shot was taken&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;game&lt;/code&gt; = Game id&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;made&lt;/code&gt; = Shot missed (0) or made (1)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(rfeb)
game_ids &amp;lt;- 2010208:2010216
shots &amp;lt;- extract_shots(game_ids)
head(shots)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       t       x      y                  team player quarter    game   made
## 1 00:39  715.20 833.85 SÁENZ HORECA ARABERRI      3       1 2010208 Missed
## 2 00:47  824.20 245.25          LEYMA CORUÑA     22       1 2010208   Made
## 3 01:23 1069.45 485.05          LEYMA CORUÑA      4       1 2010208 Missed
## 4 01:35  628.00 523.20 SÁENZ HORECA ARABERRI     10       1 2010208 Missed
## 5 01:43   72.10 283.40 SÁENZ HORECA ARABERRI      3       1 2010208 Missed
## 6 01:48  687.95 207.10          LEYMA CORUÑA      1       1 2010208   Made&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once we have the data, we can use &lt;code&gt;plot_shotcharts()&lt;/code&gt;. This function uses &lt;code&gt;ggplot2&lt;/code&gt; to plot the shot chart and it is possible to specify the mapping arguments that we want for the &lt;code&gt;geom_point()&lt;/code&gt; geom. For instance, we can color the points according to whether the shot was missed or made.&lt;/p&gt;
&lt;p&gt;Below I show all the shots taken in these 9 games in one chart:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot_shotchart(shots, color = made)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-01-24-graficos-de-tiro-con-r/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;You probably do not want to show all the shots in one chart. It is possible to use other &lt;code&gt;ggplot2&lt;/code&gt; functions to adapt the plot to our needs. We can use, for instance, &lt;code&gt;facet_wrap()&lt;/code&gt; to obtain a matrix of shotcharts with the different games:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
plot_shotchart(shots, color = made) + facet_wrap(~ game)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-01-24-graficos-de-tiro-con-r/index_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Lastly, I use &lt;code&gt;dplyr&lt;/code&gt; to filter the shots that we want to show. Let’s say I want to see the shots I took in the game against Palencia played during the chosen week. The id for this game is &lt;code&gt;2010215&lt;/code&gt; and I wear number &lt;code&gt;41&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)
shots %&amp;gt;% 
    filter(game == 2010215 &amp;amp; team == &amp;quot;COVIRAN GRANADA&amp;quot; &amp;amp; player == &amp;quot;41&amp;quot;) %&amp;gt;%
    plot_shotchart(color = made) +
    ggtitle(&amp;quot;Sergio Olmos vs. Palencia&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-01-24-graficos-de-tiro-con-r/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rfeb&lt;/code&gt; is still in development. My plan is to add more functionality to it so that not only shot data can be analyzed but regular stats or play-by-play data can be used as well. I will write more posts as I add more functions to the package.&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;resources&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.gregreda.com/2015/02/15/web-scraping-finding-the-api/&#34;&gt;Web Scraping 201: finding the API&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;%22https://cran.r-project.org/web/packages/httr/vignettes/quickstart.html%22&#34;&gt;Getting started with httr&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://egallic.fr/drawing-a-basketball-court-with-r/&#34;&gt;Drawing a basketball court with R&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Exploring the multiplication table with R</title>
      <link>/post/2018-11-06-multiplication-table/multiplication-table-with-r/</link>
      <pubDate>Tue, 06 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018-11-06-multiplication-table/multiplication-table-with-r/</guid>
      <description>&lt;p&gt;I was reading about the &lt;a href=&#34;https://plus.maths.org/content/hidden-beauty-multiplication-tables&#34;&gt;Hidden beauty of multiplication tables&lt;/a&gt; and I thought it could be fun to make some of the cool plots in that article with R.&lt;/p&gt;
&lt;p&gt;As I was trying to visualize new patterns in the multiplication table, I ended up with some useful fuctions that I decided to put in a simple R package called &lt;code&gt;multable&lt;/code&gt; that you can install from &lt;a href=&#34;https://github.com/solmos/multable&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&#34;the-multiplication-table&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The multiplication table&lt;/h2&gt;
&lt;p&gt;Consider the standard &lt;span class=&#34;math inline&#34;&gt;\(10 \times 10\)&lt;/span&gt; multiplication table, with the first row and the first column taking the values &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; through &lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt;, forming a grid with the corresponding products.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)

# Data frame with all the values of the 10x10 multiplication table
multiplication_table &amp;lt;- tibble(
    x = 1:10,
    y = 1:10
) %&amp;gt;% # Get all combination of x and y
    complete(x, y) %&amp;gt;% # Get the product of all combinations
    mutate(product = x * y)

ggplot(multiplication_table, aes(x, y)) +
    geom_tile(color = &amp;quot;white&amp;quot;) +
    geom_text(aes(label = product), color = &amp;quot;white&amp;quot;) +
    # We want the table to start with 1 in the upper-left corner
    scale_y_continuous(trans = &amp;quot;reverse&amp;quot;) +
    # We want to always display the tables as squares
    coord_fixed() +
    theme_void()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-11-06-multiplication-table/index_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;For purposes that we will see next, I am going to add a row and a column of zeros above and to the left of our table, respectively:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;multiplication_table &amp;lt;- tibble(
    x = 0:10,
    y = 0:10
) %&amp;gt;% 
    complete(x, y) %&amp;gt;% 
    mutate(product = x * y)
ggplot(multiplication_table, aes(x, y)) +
    geom_tile(color = &amp;quot;white&amp;quot;) +
    geom_text(aes(label = product), color = &amp;quot;white&amp;quot;) +
    scale_y_continuous(trans = &amp;quot;reverse&amp;quot;) +
    coord_fixed() +
    theme_void()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-11-06-multiplication-table/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Next, we will discover some beautiful symmetries by coloring the rectangles of the multiplication table that correspond to multiples of a number &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; for various values of &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;single-multiples&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Single multiples&lt;/h2&gt;
&lt;p&gt;We say that &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; is a multiple of &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; if &lt;span class=&#34;math inline&#34;&gt;\(c = n k\)&lt;/span&gt; for some integer &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;, which is called the multiplier. So we can tell if a given number &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; is a multiple of &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; if the division &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; over &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; has remainder 0.&lt;/p&gt;
&lt;p&gt;Let’s begin with &lt;span class=&#34;math inline&#34;&gt;\(k = 2\)&lt;/span&gt;. I am going to color the cells corresponding to multiples of &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; in one color and non-multiples of &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; in another color. Check out the pattern it emerges:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(wesanderson)
m2 &amp;lt;- multiplication_table %&amp;gt;% 
    mutate(multiple_of_2 = product %% 2 == 0)
# Color palette chosen from the wesanderson package
colors &amp;lt;- wes_palette(name = &amp;quot;Zissou1&amp;quot;, n = 2)
ggplot(m2, aes(x, y)) +
    geom_tile(aes(fill = multiple_of_2), color = &amp;quot;white&amp;quot;) +
    geom_text(aes(label = product), color = &amp;quot;white&amp;quot;) +
    scale_y_continuous(trans = &amp;quot;reverse&amp;quot;) +
    coord_fixed() +
    scale_fill_manual(values = colors,
                      name = &amp;quot;Multiple of 2?&amp;quot;,
                      labels = c(&amp;quot;No&amp;quot;, &amp;quot;Yes&amp;quot;)) +
    theme_void()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-11-06-multiplication-table/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;If we look closely we can see that the whole pattern above can be pieced together using the following fundamental block:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;block_2 &amp;lt;- tibble(
    x = c(0,1),
    y = c(0,1)
) %&amp;gt;% 
    complete(x, y) %&amp;gt;% 
    distinct() %&amp;gt;% 
    mutate(product = x * y,
           multiple = product %% 2 == 0)
ggplot(block_2, aes(x, y)) +
    geom_tile(aes(fill = multiple), color = &amp;quot;white&amp;quot;) +
    scale_y_continuous(trans = &amp;quot;reverse&amp;quot;) +
    scale_fill_manual(values = colors,
                      guide = FALSE) +
    theme_void()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-11-06-multiplication-table/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;192&#34; /&gt;&lt;/p&gt;
&lt;p&gt;As Zoheir Barka explains in his article mentioned at the beginning, the fundamental building block contains &lt;span class=&#34;math inline&#34;&gt;\(k \times k = 2 \times 2 = 4\)&lt;/span&gt; cells of the multiplication table. The fact that, in the case of a single multiple, each side of the fundamental building block is &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; can be useful when plotting our tables.&lt;/p&gt;
&lt;p&gt;We want to explore the patterns for different values of &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; so I created a simple function that plots a colored multiplication table for the supplied &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; and the supplied dimensions. Multiples and non-multiples are colored the same way as before so I chose to drop the legend for aesthetic reasons.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Auxiliary function to create a data frame 
# with the values of the multiplication table
create_mtable &amp;lt;- function(xmax, ymax) {
    data.frame(
        x = 0:xmax,
        y = 0:ymax
    ) %&amp;gt;% 
        complete(x, y) %&amp;gt;% 
        mutate(product = x * y)
}

# Plot the colored table
draw_pattern &amp;lt;- function(k, xmax, ymax) {
    # Colors chosen from the Zissou1 palette in the wesanderson package
    colors &amp;lt;- wesanderson::wes_palette(name = &amp;quot;Zissou1&amp;quot;, n = 2)
    tab &amp;lt;- create_mtable(xmax, ymax) %&amp;gt;% 
        mutate(multiple = product %% k == 0) %&amp;gt;% 
        ggplot(aes(x, y)) +
        geom_tile(aes(fill = multiple), color = &amp;quot;white&amp;quot;) +
        geom_text(aes(label = product), color = &amp;quot;white&amp;quot;) +
        scale_y_continuous(trans = &amp;quot;reverse&amp;quot;) +
        coord_fixed() +
        scale_fill_manual(values = colors) +
        theme_void() +
        guides(fill = FALSE)
    tab
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can now easily plot the colored tables for different values of &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; and see what patterns emerge:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;draw_pattern(k = 4, xmax = 4 * 3, ymax = 4 * 3) +
    labs(title = &amp;quot;Multiples of 4&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-11-06-multiplication-table/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;480&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;draw_pattern(6, 6 * 2, 6 * 2) +
    labs(title = &amp;quot;Multiples of 6&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-11-06-multiplication-table/index_files/figure-html/unnamed-chunk-6-2.png&#34; width=&#34;480&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Notice that we set the “length” of each side of the tables to multiples of &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; so that the pattern is symmetric.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;multiple-multiples&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Multiple multiples&lt;/h2&gt;
&lt;p&gt;We can plot more interesting (and beautiful) patterns if we use multiple multiples, and corresponding to them, multiple colors.&lt;/p&gt;
&lt;p&gt;Consider the multiples of &lt;span class=&#34;math inline&#34;&gt;\(k_1 = 2\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(k_2 = 3\)&lt;/span&gt;. I will color each square of the multiplication table according to the following criteria:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Not multiple of neither 2 nor 3&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Multiple only of 2&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Multiple only of 3&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Multiple of both 2 and 3&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;multiple_multiples &amp;lt;- tibble(
    x = 0:12,
    y = 0:12
) %&amp;gt;% 
    complete(x, y) %&amp;gt;% 
    mutate(product = x * y,
           m2 = product %% 2 == 0,
           m3 = product %% 3 == 0,
           inter = interaction(m2, m3)) %&amp;gt;% 
    mutate(interaction = recode_factor(inter,
                                       FALSE.FALSE = &amp;quot;Multple of neither&amp;quot;,
                                       TRUE.FALSE = &amp;quot;Multiple of 2&amp;quot;,
                                       FALSE.TRUE = &amp;quot;Multiple of 3&amp;quot;,
                                       TRUE.TRUE = &amp;quot;Multiple of both&amp;quot;))
ggplot(multiple_multiples, aes(x, y)) +
    geom_tile(aes(fill = interaction), color = &amp;quot;white&amp;quot;) +
    geom_text(aes(label = product), color = &amp;quot;white&amp;quot;) +
    scale_fill_brewer(palette = &amp;quot;Pastel1&amp;quot;,
                      name = element_blank()) +
    scale_y_continuous(trans = &amp;quot;reverse&amp;quot;) +
    coord_fixed() +
    theme_void()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-11-06-multiplication-table/index_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Notice that I used a &lt;span class=&#34;math inline&#34;&gt;\(12 \times 12\)&lt;/span&gt; table so that I got a symmetric pattern. I did this because I knew that the fundamental building block is given by the least common multiple of &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt;. That is, in this case the fundamental block consists of &lt;span class=&#34;math inline&#34;&gt;\(6 \times 6 = 36\)&lt;/span&gt; little cells.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;multable-package&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;multable package&lt;/h2&gt;
&lt;p&gt;I have created a simple R package out of this idea of coloring the factors of different numbers, called &lt;code&gt;multable&lt;/code&gt;. You can install it with&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# install.packages(&amp;quot;devtools&amp;quot;)
devtools::install_github(&amp;quot;solmos/multable&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As of now, the package contains just two functions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;create_table()&lt;/code&gt; generates a data frame with the grid values and identifies the factors for different values of &lt;code&gt;k&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;draw_pattern()&lt;/code&gt; plots the multiplication table coloring the different cells according to what value of &lt;code&gt;k&lt;/code&gt; a given cell is a factor of&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Check out the code for these functions &lt;a href=&#34;https://github.com/solmos/multable&#34;&gt;here&lt;/a&gt;. My plan is to add more functionality to this package but you can actually do some pretty cool visualizations as it is.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;multiple_tables.png&#34; /&gt;

&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Example Page</title>
      <link>/tutorial/example/</link>
      <pubDate>Sun, 09 Sep 2018 00:00:00 +0200</pubDate>
      
      <guid>/tutorial/example/</guid>
      <description>

&lt;p&gt;In this tutorial, I&amp;rsquo;ll share my top 10 tips for getting started with Academic:&lt;/p&gt;

&lt;h2 id=&#34;tip-1&#34;&gt;Tip 1&lt;/h2&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;tip-2&#34;&gt;Tip 2&lt;/h2&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Privacy Policy</title>
      <link>/privacy/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 +0200</pubDate>
      
      <guid>/privacy/</guid>
      <description>&lt;p&gt;&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Example Talk</title>
      <link>/talk/example/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 +0100</pubDate>
      
      <guid>/talk/example/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;p&gt;Click on the &lt;strong&gt;Slides&lt;/strong&gt; button above to view the built-in slides feature.&lt;/p&gt;

&lt;/div&gt;


&lt;p&gt;Slides can be added in a few ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create&lt;/strong&gt; slides using Academic&amp;rsquo;s &lt;em&gt;Slides&lt;/em&gt; feature and link using &lt;code&gt;url_slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Upload&lt;/strong&gt; an existing slide deck to &lt;code&gt;static/&lt;/code&gt; and link using &lt;code&gt;url_slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Embed&lt;/strong&gt; your slides (e.g. Google Slides) or presentation video on this page using &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;shortcodes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Further talk details can easily be added to this page using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Analysis of clustered data using linear mixed models</title>
      <link>/project/tfm/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0200</pubDate>
      
      <guid>/project/tfm/</guid>
      <description></description>
    </item>
    
    <item>
      <title>eurolig</title>
      <link>/project/eurolig/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0200</pubDate>
      
      <guid>/project/eurolig/</guid>
      <description></description>
    </item>
    
    <item>
      <title>A Person Re-Identification System For Mobile Devices</title>
      <link>/publication/person-re-id/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0200</pubDate>
      
      <guid>/publication/person-re-id/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mobile visual clothing search</title>
      <link>/publication/clothing-search/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0200</pubDate>
      
      <guid>/publication/clothing-search/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Slides</title>
      <link>/slides/example-slides/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/slides/example-slides/</guid>
      <description>

&lt;h1 id=&#34;welcome-to-slides&#34;&gt;Welcome to Slides&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/&#34; target=&#34;_blank&#34;&gt;Academic&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Efficiently write slides in Markdown&lt;/li&gt;
&lt;li&gt;3-in-1: Create, Present, and Publish your slides&lt;/li&gt;
&lt;li&gt;Supports speaker notes&lt;/li&gt;
&lt;li&gt;Mobile friendly slides&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;controls&#34;&gt;Controls&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Next: &lt;code&gt;Right Arrow&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Previous: &lt;code&gt;Left Arrow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start: &lt;code&gt;Home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finish: &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overview: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Speaker notes: &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Zoom: &lt;code&gt;Alt + Click&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34; target=&#34;_blank&#34;&gt;PDF Export&lt;/a&gt;: &lt;code&gt;E&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;code-highlighting&#34;&gt;Code Highlighting&lt;/h2&gt;

&lt;p&gt;Inline code: &lt;code&gt;variable&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Code block:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;porridge = &amp;quot;blueberry&amp;quot;
if porridge == &amp;quot;blueberry&amp;quot;:
    print(&amp;quot;Eating...&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;

&lt;p&gt;In-line math: $x + y = z$&lt;/p&gt;

&lt;p&gt;Block math:&lt;/p&gt;

&lt;p&gt;$$
f\left( x \right) = \;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;fragments&#34;&gt;Fragments&lt;/h2&gt;

&lt;p&gt;Make content appear incrementally&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Press &lt;code&gt;Space&lt;/code&gt; to play!&lt;/p&gt;

&lt;p&gt;&lt;span class=&#34;fragment &#34; &gt;
  One
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
  &lt;strong&gt;Two&lt;/strong&gt;
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
  Three
&lt;/span&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;A fragment can accept two optional parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;: use a custom style (requires definition in custom CSS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;: sets the order in which a fragment appears&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;

&lt;p&gt;Add speaker notes to your presentation&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% speaker_note %}}
- Only the speaker can read these notes
- Press `S` key to view
{{% /speaker_note %}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Press the &lt;code&gt;S&lt;/code&gt; key to view the speaker notes!&lt;/p&gt;

&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;Only the speaker can read these notes&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;S&lt;/code&gt; key to view&lt;/li&gt;
&lt;/ul&gt;

&lt;/aside&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;


&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/img/boards.jpg&#34;
  &gt;


&lt;h2 id=&#34;custom-slide&#34;&gt;Custom Slide&lt;/h2&gt;

&lt;p&gt;Customize the slide style and background&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; slide background-image=&amp;quot;/img/boards.jpg&amp;quot; &amp;gt;}}
{{&amp;lt; slide background-color=&amp;quot;#0000FF&amp;quot; &amp;gt;}}
{{&amp;lt; slide class=&amp;quot;my-style&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;custom-css-example&#34;&gt;Custom CSS Example&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s make headers navy colored.&lt;/p&gt;

&lt;p&gt;Create &lt;code&gt;assets/css/reveal_custom.css&lt;/code&gt; with:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.reveal section h1,
.reveal section h2,
.reveal section h3 {
  color: navy;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://discourse.gohugo.io&#34; target=&#34;_blank&#34;&gt;Ask&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
